name: Publish to npm and GitHub Packages

on:
  push:
    branches: [ main ]
    paths: [ 'package.json' ]

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      package-name: ${{ steps.package-info.outputs.name }}
      version: ${{ steps.package-info.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get package info
        id: package-info
        run: |
          echo "name=$(jq -r '.name' package.json)" >> $GITHUB_OUTPUT
          echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: check
        run: |
          if git diff HEAD~1 HEAD --name-only | grep -q "package.json"; then
            CURRENT_VERSION=$(jq -r '.version' package.json)
            PREVIOUS_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            else
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "Version unchanged: $CURRENT_VERSION"
            fi
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "package.json not modified"
          fi

  publish:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (npmjs)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build --if-present

      # --- Publish to npmjs.com ---
      - name: Publish to npmjs
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # --- Prepare for GitHub Packages ---
      - name: Change package name to scoped for GitHub
        run: |
          npm pkg set name="@${{ github.repository_owner }}/${{ needs.check-version.outputs.package-name }}"

      - name: Setup Node.js (GitHub Packages)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'

      # --- Publish to GitHub Packages ---
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- Create GitHub Release ---
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          release_name: Release v${{ needs.check-version.outputs.version }}
          body: |
            ## Changes in v${{ needs.check-version.outputs.version }}
            
            Package published to:
            - [npmjs.com](https://www.npmjs.com/package/${{ needs.check-version.outputs.package-name }})
            - [GitHub Packages](https://github.com/${{ github.repository }}/packages)
            
            Install with:
            ```bash
            npm install ${{ needs.check-version.outputs.package-name }}
            ```
          draft: false
          prerelease: false
